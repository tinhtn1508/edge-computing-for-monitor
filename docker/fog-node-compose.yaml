version: "3.3"
services:
  fog-processor:
    image: trhoangtuan96/fog-processor:latest
    networks:
      - fog
      - docker_broker
    restart: always
    volumes:
      - ./../fog-node/processor:/app
    depends_on:
      kafka:
        condition: service_healthy
      fog-influxdb:
        condition: service_healthy

  fog-influxdb:
    image: "influxdb"
    networks:
      fog:
        ipv4_address: 172.30.0.10
    restart: always
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 10s
      timeout: 10s
      retries: 10

  fog-grafana:
    image: "grafana/grafana"
    ports:
      - "3100:3000"
    networks:
      - fog
    restart: always

  fog-psql:
    image: "postgres:alpine"
    networks:
      fog: 
        ipv4_address: 172.30.0.20
    restart: always
    ports: 
      - "5432:5432"
    env_file: 
      - postgres.env
    healthcheck:
      test: "/bin/sh -c pg_isready -U postgres"
      interval: 10s
      timeout: 10s
      retries: 10
  fog-catalog:
    image: trhoangtuan96/fog-processor:latest
    networks:
      - fog
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./../fog-node/go-catalog:/app
    depends_on:
      fog-psql:
        condition: service_healthy
  fog-redis:
    image:  "redis:latest"
    networks:
      - fog
    restart: always
    ports:
      - "6379:6379"
  fog-error-consumer:
    image: "duongtomho/fog-error-consumer:latest"
    networks:
      - fog
      - docker_broker
    restart: always
    volumes:
      - ./../fog-node/error-consumer:/app
    depends_on:
      kafka:
        condition: service_healthy

networks:
  fog:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
  docker_broker:
    external: true
